/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package j_combat_animaux;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author ELOISE
 */
public class IHM_plateau extends javax.swing.JFrame {

    private File fichierplateau = new File("src/images/plateau0.png");//on va chercher le fichier dans le dossier d'images
    private BufferedImage imagePlateau;//la placer en tant que bufferedImage permet de la redessiner à chaque coup
    
    

    /*On a trouvé une autre méthode!!! yeah! Définiions des trucs dont on a besoin:*/
    
    private Animal[] ani=new Animal[16];//j'ai changé la valeur du tableau juste pour les essais
    private int nbani=0;//servira pour choper l'animal correspondant
    
     private File[] tab_fich=new File[16];
    private BufferedImage[] image=new BufferedImage[16];
    private int[] x_aff =new int[16];
    private int[] y_aff=new int[16];
    
    
    /**
     * Creates new form IHM_plateau
     */
    public IHM_plateau() {
        initComponents();
    /*Définitions de tous les animaux selon leur classe, c'est plus court: */
        
    Animal a1=new Animal("rat", 642, 14, 1,true);//rat de rang 1 couleur:bleu
    Animal a2=new Animal("chat", 747, 539, 2,true);
    Animal a3=new Animal("loup", 642, 433, 3,true);
    Animal a4=new Animal("chien", 747, 118, 4,true);
    Animal a5=new Animal("panthère", 642, 223, 5,true);
    Animal a6=new Animal("lion", 852, 14, 6,true);
    Animal a7=new Animal("tigre", 852, 644, 7,true);
    Animal a8=new Animal("elephant", 642, 644, 8,true);
    Animal a9=new Animal("rat", 225, 644, 1,false);//rat de rang 1 couleur:rouge
    Animal a10=new Animal("chat", 120, 118, 2,false);
    Animal a11=new Animal("loup", 225,223, 3,false);
    Animal a12=new Animal("chien", 120, 539, 4,false);
    Animal a13=new Animal("panthère", 225, 433, 5,false);
    Animal a14=new Animal("lion", 14, 644, 6,false);
    Animal a15=new Animal("tigre", 14, 14, 7,false);
    Animal a16=new Animal("elephant", 225, 20, 8,false);
    
        ajouterAnimal(a1);
        ajouterAnimal(a2);
        ajouterAnimal(a3);
        ajouterAnimal(a4);
        ajouterAnimal(a5);
        ajouterAnimal(a6);
        ajouterAnimal(a7);
        ajouterAnimal(a8);
        ajouterAnimal(a9);
        ajouterAnimal(a10);
        ajouterAnimal(a11);
        ajouterAnimal(a12);
        ajouterAnimal(a13);
        ajouterAnimal(a14);
        ajouterAnimal(a15);
        ajouterAnimal(a16);
        
            
        setBounds(0, 0, 985, 810);     //poser un setBounds(positionné au milieu de l'écran, 524,672);
        jPanel1.setFocusable(true);//on peut appliquer des actions sur le JPanel lui-même (cliquer, récup des coordonnées par rapport au Jpanel,ect..)
        try {
            imagePlateau = ImageIO.read(fichierplateau);//utilisation de plateau_de_jeu
        } catch (IOException ex) {
            System.out.println("fichierplateau inutilisable");
        }
        /* Ce qui nous sauvera, parce que tout le reste est dans une fonction autre part!*/
        
        creation_aff();
        afficherAnimaux(ani);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel() {
            public void paintComponent(Graphics g){
                //affichage plateau
                g.drawImage(imagePlateau,0,0, null);

                /*nouveau code du customize code:
                */
                for(int i=0; i<ani.length; i++){
                    g.drawImage(image[i],x_aff[i],y_aff[i],null);
                }

            }
        }
        ;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private int xtemp, ytemp;
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        xtemp = evt.getX();
        System.out.println("x:" + xtemp);
        ytemp = evt.getY();
        System.out.println("y:" + ytemp + "\n");
        
    }//GEN-LAST:event_jPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IHM_plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IHM_plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IHM_plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHM_plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHM_plateau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
/* Ajout des toutes les fonctions dont on aura besoin pour faire marcher le code :*/
   
    private void ajouterAnimal(Animal a){
        ani[nbani]=a;
        nbani++;
        
    }
    
        private void creation_aff() {
        for (int i = 0; i < ani.length; i++) {
            tab_fich[i]=new File("src/images/"+ani[i].getNom()+"_"+ani[i].getCouleur()+".jpg");
        }
    }
    
        private void afficherAnimaux(Animal[] ani) {
       try{
        for (int i = 0; i < ani.length; i++) {
            x_aff[i]=ani[i].getX_init();
            y_aff[i]=ani[i].getY_init();
            image[i]=ImageIO.read(tab_fich[i]);
            
        }
    }catch(IOException ex){
    System.out.println("affichage des animaux impossible");
}
    }
    
}
